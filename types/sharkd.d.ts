interface Frame extends SharkdError {
    tree: Tree;
    bytes: string;
    fol: [[string, string]];
}

interface Tree {
    /** Label. This is what is shown in the user interface. */
    l: string;
    /** Type of the node. */
    t?: "proto" | "framenum" | "url";
    /** Filter String. This value can be applied as a display filter. */
    f: string;
    /** Severity. No idea what this severity could be about. */
    s?: string; // Severity
    /** Subtree index. */
    e?: number;
    /** Array of subtree nodes.*/
    n?: [Tree];
    /** Two item array containing [Item Start, Item Length]. */
    h?: [number, number];
    /** Two item array containing [Appendix Start, Appendix Length]. */
    i?: [number, number];
    /** Two item array containing [Protocol Start, Protocol Length]. WIP */
    p?: [number, number];
    /** Data source index. */
    ds?: number;
    /** Only set for t: "url". */
    url?: string;
    /** Only set for t: "framenum". */
    fnum?: number;
    /** This is set to true if the field is generated by Wireshark. */
    g?: boolean;
    /** This is set if the field should be hidden in the user interface.*/
    v?: boolean;
}

interface ColumnFrame {
    /** Values for each column. */
    c: string[];
    /** Frame number. */
    num: number;
    /** Background Color in hex */
    bg: string;
    /** Foreground Color in hex */
    fg: string;
}

interface SharkdError {
    err: number;
}
